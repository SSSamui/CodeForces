#include <iostream>
#include <cstdio>
#include <vector>
#include <cmath>
using namespace std;

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(nullptr);

	int n, _;
	cin >> n >> _;
	vector<int> a(n);
	for (int i = 0; i < n; i++) cin >> a[i];

	int bsize = sqrt(n);
	vector<pair<int, pair<int, int>>> nxt(n);
	for (int stt = 0; stt < n; stt += bsize)
	{
		int nxtstt = min(stt + bsize, n);
		for (int curr = nxtstt - 1; curr >= stt; curr--)
		{
			if (curr + a[curr] >= nxtstt) nxt[curr] = { 1, {curr + a[curr], curr} };
			else nxt[curr] = { 1 + nxt[curr + a[curr]].first, nxt[curr + a[curr]].second };
		}
	}

	while (_--)
	{
		int q;
		cin >> q;
		if (q == 0)
		{
			int m, b;
			cin >> m >> b;
			m--;
			a[m] = b;

			int stt = m / bsize;
			stt *= bsize;
			int nxtstt = min(stt + bsize, n);
			for (int curr = m; curr >= stt; curr--)
			{
				if (curr + a[curr] >= nxtstt) nxt[curr] = { 1, {curr + a[curr], curr} };
				else nxt[curr] = { 1 + nxt[curr + a[curr]].first, nxt[curr + a[curr]].second };
			}
		}

		else
		{
			int m;
			cin >> m;
			m--;

			int count = 0, curr = m, last = 0;
			while (curr < n)
			{
				count += nxt[curr].first, last = nxt[curr].second.second;
				curr = nxt[curr].second.first;
			}

			cout << last + 1 << ' ' << count << "\n";
		}
	}
}
